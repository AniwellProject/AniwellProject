/* =========================
   Reset & Base
========================= */
* {
	box-sizing: border-box;
}

html,
body {
	margin: 0;
	overflow-x: hidden;
	/* 가로 흔들림 방지 */
	/* scroll-behavior: smooth;  // pin 구간에서 튐이 있으면 주석 유지 권장 */
}

body {
	text-align: center;
	/* 배경/폰트는 Tailwind로 제어: body 클래스 그라디언트/인라인 폰트 유지 */
}

/* =========================
   Section Layout
========================= */
/* 100vh 대신 100dvh만 사용 (중복/충돌 제거) */
.section {
	min-height: 100dvh;
}

/* 상단 섹션 */
.section-top {
	position: relative;
	width: 100%;
	z-index: 5;
}

/* 중간 섹션 컨테이너: 부모는 고정(애니메이션 금지) */
.section-middle {
	position: relative;
	z-index: 10;
	/* 개별 섹션이 각자 배경 가짐 */
}

/* =========================
   Logo / Character
========================= */
.logo {
	width: 90px;
}

.bg-logo {
	position: relative;
	min-width: 500px;
}

.b-logo {
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	min-width: 400px;
	min-height: 400px;
	z-index: -10;
	position: relative;
	width: 1300px;
}

.char {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	max-width: 500px;
	min-width: 400px;
	min-height: 400px;
}

.img_head {
	position: absolute;
	top: -90px;
	left: 10px;
	z-index: 99;
}

/* 세션3 스크롤 길이: 타임라인 길이에 맞게 조절(2~4 추천) */
.sec3-scroller {
	height: calc(100dvh * 3);
}



/* .img_body는 HTML에서 Tailwind 'absolute' 사용중 — 여기선 사이즈만 */
.img_body {
	max-width: 600px;
}

/* =========================
   Buttons / Icons
========================= */
.icon {
	top: 70%;
	right: 10%;
	position: absolute;
	display: flex;
}



/* =========================
   Performance hints for GSAP layers
========================= */
.right-anim,
.sec3-layer,
.sec3-dog,
.sec3-heart,
.sec3-sparkle {
	will-change: transform, opacity;
}

/* =========================
   Keyframe Animations
========================= */
@keyframes sway-head {

	0%,
	100% {
		transform: rotate(-1deg);
	}

	25% {
		transform: rotate(0.5deg);
	}

	50% {
		transform: rotate(-0.5deg);
	}

	75% {
		transform: rotate(1deg);
	}
}

@keyframes swingX {

	0%,
	100% {
		transform: translateX(0);
	}

	25% {
		transform: translateX(-4px);
	}

	75% {
		transform: translateX(4px);
	}
}

@keyframes bounce-down {

	0%,
	100% {
		transform: translateY(0);
	}

	50% {
		transform: translateY(8px);
	}
}

.sway-top {
	animation: sway-head 5s ease-in-out infinite;
	transform-origin: bottom center;
	z-index: 10;
}

.swing-left-right {
	animation: swingX 2.5s ease-in-out infinite;
	transform-origin: bottom center;
}

.animate-bounce-down {
	animation: bounce-down 1.2s ease-in-out infinite;
}





/* =========================
  로고 애니메이션 / logo / animation
========================= */



#e2OkVSxci3g1 {
	--drawDur: 2.6s;
	--riseDur: 6s;
	/* 물이 차오르는 시간 */
}

/* 선 그리는 총 시간 */
#e2OkVSxci3g1 path.draw {
	stroke-linecap: round;
	stroke-dasharray: 1;
	/* pathLength=1 기준 정규화 */
	stroke-dashoffset: 1;
	/* 완전 숨김에서 시작 */
	animation: draw var(--drawDur) ease forwards var(--d, 0s);
}

#p1.draw {
	--d: 0s;
}

#p2.draw {
	--d: .15s;
}

#p3.draw {
	--d: .30s;
}

#p4.draw {
	--d: .45s;
}

#p5.draw {
	--d: .60s;
}

#p6.draw {
	--d: .75s;
}

#p6.draw {
	--d: .90s;
}

@keyframes draw {
	to {
		stroke-dashoffset: 0;
	}
}

/* ▼ 물결 채움 애니메이션(클리핑 내부) */
/* SVG transform이 경계 박스를 기준으로 동작하도록 */
#waterRise,
#waterWave {
	transform-box: fill-box;
	transform-origin: center;
}

/* 물결 X방향 이동(무한 반복) */
@keyframes waveShift {
	from {
		transform: translateX(0%);
		/* 시작 위치: 오른쪽으로 절반 이동 */
	}

	to {
		transform: translateX(-49%);
	}

	/* 2장 타일 중 절반만큼 이동해서 루프 */
}

/* 물 Y방향 상승(선 그리기 끝난 후 시작) */
@keyframes riseUp {
	from {
		transform: translateY(100%);
	}

	/* 아래에서 시작 */
	to {
		transform: translateY(-10%);
	}
}

/* 물결 타일이 올라오는 애니메이션 */
#waterRise {
	transform: translateY(100%);
	animation: riseUp var(--riseDur) cubic-bezier(.25, .7, .2, 1) forwards;
	/* 지연 없음 */
}

#waterWave {
	animation: waveShift 3s linear infinite;
}



/* ---- */


/* 3D 원근감 컨테이너 */
.tilt-scene {
	display: inline-block;
	perspective: 900px;
	/* 자식의 3D 깊이 보이게 */
}

/* 기울어질 타겟 */
#visual {
	transform-style: preserve-3d;
	/* 자식 Z 이동 유지 */
	transform-origin: center center;
	will-change: transform;
	transition: transform .12s ease-out;
	/* SVG일 때 CSS 트랜스폼 기준 박스 지정 */
	transform-box: fill-box;
}

/* 패럴랙스 레이어 기본값 */
#visual [data-depth] {
	transform-box: fill-box;
	/* SVG shapes를 위한 설정 */
	transform-origin: center;
}

/* (HTML일 때만) 하이라이트/글레어 오버레이 */
#visual .glare {
	position: absolute;
	inset: 0;
	pointer-events: none;
	mix-blend-mode: screen;
	opacity: 0;
	transition: opacity .2s ease;
}



/**/

.btn {
	width: 300px;
	flex: 1 1 auto;
	margin: 10px;
	padding: 20px;
	text-align: center;
	text-transform: uppercase;
	transition: 0.5s;
	background-size: 200% auto;
	color: white;
	/* text-shadow: 0px 0px 10px rgba(0,0,0,0.2);*/
	box-shadow: 0 0 20px #2E576D;
	border-radius: 999px;
}

.btn:hover {
	background-position: right center;
	/* change the direction of the change here */
	box-shadow: 0 0 20px #eee;
}

.btn-4 {
	background-image: linear-gradient(to right, #DBE09A 0%, #A8C7AF 51%, #DBE09A 100%);
}

/**/

.marquee {
    --gap: 2.5rem;     /* 아이템 간 간격 */
    --duration: 18s;   /* 한 바퀴 시간 (작을수록 빠름) */
    position:absolute;
    overflow: hidden;
    width: 100%;
    padding-block: .5rem;
  }

  /* 🔑 두 트랙을 한 덩어리로 묶고 이것만 움직임 */
  .marquee__rail {
    display: flex;
    width: max-content;        /* 내용 크기만큼 */
    will-change: transform;
    animation: scroll var(--duration) linear infinite;
  }

  /* 각 트랙 내부 배치 */
  .marquee__track {
    display: inline-flex;
    align-items: center;
    gap: var(--gap);
    white-space: nowrap;
    flex: none;                /* 늘어나지 않게 고정 */
    margin: 0;                 /* 예기치 않은 마진 제거 */
  }

  .marquee__track span {
    font-weight: 700;
    font-size: clamp(1rem, 2.2vw, 1.5rem);
    letter-spacing: .02em;
    color: #0f172a;
  }

  /* 오른쪽 -> 왼쪽. 트랙을 2번 이어놨으니 절반(-50%)만 이동 */
  @keyframes scroll {
    from { transform: translateX(0); }
    to   { transform: translateX(-50%); }
  }

  /* (선택) 가장자리 페이드 */
  .marquee::before,
  .marquee::after {
    content: "";
    position: absolute; top: 0; bottom: 0; width: 5rem; pointer-events: none;
  }

  /* (선택) 사용자가 모션 줄이기 설정 시 정지 */
  @media (prefers-reduced-motion: reduce) {
    .marquee__rail { animation: none; }
  }